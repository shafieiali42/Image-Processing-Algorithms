import math
import cv2 as cv
import numpy as np
import time


def save_frame(image_copy, contour, iteration, max_iteration, center):
    reversed_contour = np.roll(contour, 1, axis=1)


    # cv.circle(image_copy, (int(center[1]), int(center[0])), 10, color=(0, 0, 255), thickness=-1)
    contour_list = contour.tolist()
    for c in contour_list:
        x = c[0]
        y = c[1]
        cv.circle(image_copy, (int(y), int(x)), 8, color=(0, 255, 0), thickness=-1)
    # cv.imwrite(f"results20/image{iteration}.jpg", image_copy)
    reversed_contour = reversed_contour.reshape((-1, 1, 2))
    cv.polylines(image_copy, reversed_contour.astype('int32'), True, color=(0, 0, 0), thickness=2)
    frames.append(image_copy)
    if iteration == max_iteration:
        cv.imwrite("res11.jpg", image_copy)
        for frame in  frames:
            video.write(frame)
        video.release()



first_clicked = False
is_clicking = False
points = []
frames=[]


def mouse_click(event, x, y, flag, params):
    global is_clicking, first_clicked
    if event == cv.EVENT_LBUTTONDOWN:
        first_clicked = True
        is_clicking = True
        # print(f'{x} , {y}')
    elif event == cv.EVENT_LBUTTONUP:
        is_clicking = False
        # print("End")
    elif is_clicking and event == cv.EVENT_MOUSEMOVE:
        points.append((x, y))
        cv.circle(image_copy, (x, y), 5, (0, 255, 0), -1)


image = cv.imread("tasbih.jpg")
height=image.shape[0]
width=image.shape[1]
video=cv.VideoWriter('contour.mp4',-1,30,(width,height))
image_copy = np.copy(image)
cv.imshow("Tasbih", image_copy)
cv.setMouseCallback('Tasbih', mouse_click)

while not first_clicked or is_clicking:
    cv.imshow('Tasbih', image_copy)
    cv.waitKey(1)

frames.append(image_copy)
print("End")
cv.destroyAllWindows()

start_time=time.time()
image_copy_for_gradient = np.copy(image)
image_copy_for_gradient = cv.GaussianBlur(image_copy_for_gradient, (5, 5), 1)
sobel_x = cv.Sobel(image, cv.CV_64F, 1, 0, ksize=5)
sobel_y = cv.Sobel(image, cv.CV_64F, 0, 1, ksize=5)
gradient_image = sobel_x ** 2 + sobel_y ** 2
gradient_image = np.sum(gradient_image, axis=2)
print(gradient_image.shape)
print(image.shape)
# print(np.max(gradient_image))
gradient_image = cv.GaussianBlur(gradient_image, (31, 31), 1)
gradient_image[gradient_image < 5000000] = 0
gradient_image[gradient_image != 0] = np.max(gradient_image)
gradient_image = cv.GaussianBlur(gradient_image, (31, 31), 1)
cv.imwrite("Gradient.jpg", gradient_image)
print(gradient_image.shape)




iteration = 0
max_iteration = 260
neighbour_size = 3
half_of_neighbour_size = 1


# points = [(695, 263), (695, 265), (695, 265), (696, 266), (697, 267), (697, 268), (697, 269), (697, 270), (697, 271),
#           (698, 272), (698, 273), (698, 274), (698, 275), (698, 276), (698, 277), (699, 278), (699, 279), (700, 280),
#           (700, 280), (700, 281), (700, 282), (700, 284), (700, 285), (700, 285), (700, 287), (701, 289), (701, 289),
#           (701, 290), (702, 290), (702, 291), (702, 293), (702, 293), (702, 294), (702, 296), (702, 297), (703, 297),
#           (703, 299), (703, 299), (703, 300), (703, 301), (703, 301), (704, 303), (704, 304), (704, 305), (705, 305),
#           (705, 306), (705, 308), (705, 309), (706, 310), (706, 311), (706, 312), (706, 313), (706, 314), (706, 315),
#           (707, 316), (707, 317), (707, 317), (707, 319), (707, 320), (707, 321), (708, 322), (708, 324), (708, 325),
#           (708, 326), (708, 327), (708, 328), (708, 329), (708, 330), (708, 331), (708, 332), (708, 332), (708, 334),
#           (708, 335), (708, 336), (708, 337), (708, 337), (708, 338), (708, 341), (708, 342), (708, 343), (708, 344),
#           (708, 344), (708, 345), (708, 346), (708, 347), (708, 348), (708, 348), (708, 350), (708, 351), (708, 351),
#           (708, 352), (708, 353), (708, 354), (708, 356), (708, 356), (709, 357), (709, 357), (709, 358), (709, 359),
#           (709, 360), (709, 360), (709, 362), (709, 362), (709, 363), (709, 365), (709, 366), (709, 367), (709, 368),
#           (709, 368), (709, 370), (709, 370), (709, 371), (709, 373), (709, 376), (709, 377), (709, 378), (709, 379),
#           (709, 382), (709, 383), (709, 384), (709, 385), (709, 387), (709, 388), (709, 389), (709, 391), (709, 392),
#           (709, 393), (709, 394), (709, 396), (709, 397), (709, 398), (709, 400), (709, 402), (709, 404), (709, 404),
#           (709, 405), (709, 406), (709, 407), (709, 408), (709, 409), (709, 410), (709, 410), (709, 411), (708, 415),
#           (707, 416), (707, 418), (707, 420), (707, 422), (706, 424), (706, 425), (705, 426), (705, 427), (705, 428),
#           (705, 429), (705, 429), (705, 430), (704, 432), (704, 432), (704, 433), (704, 435), (703, 435), (703, 436),
#           (703, 437), (702, 438), (702, 439), (702, 440), (702, 441), (700, 444), (700, 445), (700, 445), (700, 446),
#           (699, 448), (699, 449), (699, 450), (699, 450), (698, 451), (698, 451), (698, 452), (698, 453), (698, 454),
#           (698, 455), (697, 456), (696, 458), (696, 460), (696, 461), (695, 463), (695, 464), (694, 465), (694, 467),
#           (693, 468), (692, 468), (692, 470), (691, 471), (691, 472), (690, 473), (690, 474), (690, 475), (690, 476),
#           (689, 476), (689, 477), (689, 478), (688, 479), (688, 480), (688, 480), (687, 481), (686, 482), (686, 483),
#           (686, 483), (685, 485), (684, 485), (684, 487), (683, 488), (682, 488), (681, 489), (681, 491), (680, 492),
#           (679, 493), (678, 494), (678, 495), (678, 495), (677, 496), (677, 497), (677, 498), (676, 499), (676, 499),
#           (676, 500), (674, 502), (674, 502), (674, 503), (672, 504), (672, 506), (671, 506), (671, 507), (670, 508),
#           (670, 509), (669, 509), (669, 510), (669, 510), (669, 511), (668, 511), (668, 513), (668, 513), (667, 514),
#           (666, 514), (666, 515), (665, 516), (665, 516), (664, 517), (664, 519), (663, 519), (662, 520), (661, 521),
#           (661, 522), (660, 522), (659, 523), (658, 524), (658, 524), (657, 525), (657, 526), (656, 526), (655, 527),
#           (654, 529), (652, 530), (652, 531), (651, 532), (649, 533), (647, 535), (645, 536), (645, 538), (643, 538),
#           (642, 541), (641, 541), (640, 542), (639, 543), (639, 544), (638, 544), (638, 545), (638, 545), (637, 546),
#           (636, 546), (636, 547), (635, 548), (634, 548), (634, 549), (632, 550), (629, 552), (628, 553), (627, 554),
#           (624, 555), (624, 556), (622, 557), (622, 558), (621, 559), (620, 559), (619, 560), (617, 561), (617, 561),
#           (615, 563), (614, 563), (613, 563), (613, 564), (612, 564), (611, 564), (611, 565), (610, 565), (609, 566),
#           (608, 566), (608, 567), (607, 567), (606, 568), (605, 568), (603, 570), (603, 570), (601, 571), (600, 572),
#           (599, 572), (598, 572), (598, 573), (597, 573), (596, 574), (595, 574), (595, 575), (594, 575), (593, 575),
#           (592, 576), (591, 576), (591, 576), (590, 577), (589, 578), (587, 579), (585, 580), (583, 582), (583, 582),
#           (581, 582), (581, 583), (580, 583), (579, 584), (578, 584), (577, 584), (576, 585), (575, 585), (575, 586),
#           (574, 586), (572, 587), (572, 587), (571, 588), (570, 588), (569, 589), (569, 589), (567, 590), (566, 590),
#           (565, 591), (564, 591), (563, 591), (562, 592), (560, 593), (558, 593), (556, 595), (554, 596), (551, 597),
#           (549, 598), (548, 598), (547, 599), (546, 599), (545, 600), (545, 600), (544, 601), (543, 601), (543, 601),
#           (541, 601), (541, 602), (540, 602), (538, 603), (536, 603), (535, 604), (534, 604), (533, 604), (532, 604),
#           (531, 605), (531, 605), (529, 606), (529, 606), (527, 607), (525, 607), (525, 607), (524, 608), (524, 608),
#           (523, 609), (523, 609), (521, 609), (521, 610), (521, 610), (520, 611), (518, 611), (517, 611), (517, 611),
#           (515, 612), (514, 613), (514, 613), (512, 613), (512, 614), (511, 614), (511, 615), (510, 615), (509, 615),
#           (508, 615), (507, 616), (506, 616), (505, 616), (505, 617), (504, 617), (504, 617), (503, 618), (502, 618),
#           (500, 618), (499, 618), (499, 618), (498, 619), (497, 620), (497, 620), (496, 620), (495, 621), (494, 621),
#           (493, 621), (492, 621), (492, 622), (491, 622), (490, 622), (489, 622), (487, 622), (487, 625), (486, 625),
#           (485, 625), (483, 625), (482, 625), (482, 625), (481, 626), (480, 626), (479, 626), (479, 626), (477, 626),
#           (477, 626), (474, 627), (473, 627), (470, 628), (470, 628), (469, 628), (467, 629), (465, 629), (464, 629),
#           (463, 630), (463, 630), (461, 630), (459, 631), (458, 631), (455, 631), (454, 631), (453, 631), (453, 631),
#           (452, 631), (451, 632), (450, 632), (450, 632), (449, 632), (448, 633), (447, 633), (446, 633), (445, 633),
#           (444, 633), (443, 633), (443, 633), (441, 634), (438, 635), (436, 635), (435, 635), (434, 635), (433, 637),
#           (431, 637), (431, 637), (430, 637), (428, 637), (426, 637), (423, 637), (422, 638), (422, 638), (420, 638),
#           (418, 638), (418, 639), (417, 639), (417, 639), (416, 639), (416, 639), (415, 639), (414, 639), (413, 639),
#           (412, 639), (411, 639), (410, 639), (409, 640), (408, 640), (407, 640), (406, 640), (405, 640), (403, 640),
#           (401, 640), (400, 640), (399, 640), (398, 640), (397, 640), (396, 640), (396, 641), (395, 641), (394, 641),
#           (393, 641), (392, 641), (390, 641), (389, 641), (388, 641), (387, 641), (386, 641), (385, 641), (384, 641),
#           (382, 641), (382, 641), (381, 641), (379, 641), (378, 641), (375, 642), (374, 642), (373, 642), (372, 642),
#           (371, 642), (370, 642), (369, 642), (368, 642), (367, 642), (364, 642), (362, 642), (360, 642), (358, 642),
#           (357, 642), (356, 642), (354, 641), (352, 641), (350, 641), (347, 641), (345, 641), (344, 641), (343, 641),
#           (342, 641), (341, 641), (340, 640), (339, 640), (336, 640), (335, 640), (332, 640), (331, 640), (329, 640),
#           (328, 640), (327, 640), (326, 640), (326, 640), (323, 640), (323, 639), (322, 639), (321, 639), (319, 639),
#           (318, 639), (318, 639), (316, 639), (316, 638), (312, 638), (311, 638), (308, 637), (307, 637), (305, 637),
#           (303, 636), (301, 636), (301, 636), (301, 635), (299, 634), (299, 634), (298, 633), (298, 633), (297, 632),
#           (296, 632), (296, 631), (295, 631), (295, 630), (294, 630), (294, 629), (293, 628), (292, 628), (292, 627),
#           (291, 627), (289, 626), (289, 625), (288, 625), (288, 624), (287, 624), (286, 623), (286, 623), (285, 621),
#           (283, 621), (282, 618), (281, 618), (280, 618), (279, 617), (278, 616), (278, 615), (277, 615), (276, 614),
#           (276, 613), (275, 612), (275, 612), (275, 611), (274, 611), (273, 609), (272, 608), (271, 607), (271, 607),
#           (271, 606), (270, 606), (270, 605), (270, 605), (269, 604), (269, 603), (269, 602), (268, 602), (267, 600),
#           (266, 599), (266, 599), (265, 598), (265, 597), (265, 597), (264, 596), (263, 596), (263, 596), (262, 595),
#           (262, 595), (261, 594), (261, 593), (260, 593), (259, 592), (259, 592), (259, 591), (258, 590), (258, 589),
#           (257, 589), (257, 588), (256, 588), (255, 587), (254, 586), (254, 585), (254, 584), (253, 584), (253, 583),
#           (252, 583), (251, 581), (251, 581), (250, 580), (250, 580), (249, 578), (249, 578), (248, 577), (247, 576),
#           (247, 575), (246, 574), (245, 574), (245, 573), (244, 572), (244, 571), (244, 570), (243, 569), (242, 568),
#           (241, 567), (240, 566), (239, 565), (238, 563), (238, 563), (236, 561), (236, 560), (235, 560), (235, 559),
#           (234, 559), (234, 558), (233, 557), (233, 557), (232, 556), (232, 555), (231, 552), (230, 551), (229, 550),
#           (229, 549), (226, 548), (226, 547), (225, 545), (224, 544), (224, 544), (223, 542), (222, 541), (221, 541),
#           (221, 540), (221, 539), (219, 538), (218, 536), (217, 534), (215, 532), (214, 531), (214, 529), (213, 529),
#           (212, 529), (211, 528), (211, 527), (211, 526), (211, 525), (210, 525), (210, 524), (210, 524), (209, 523),
#           (209, 522), (209, 521), (207, 520), (207, 519), (207, 517), (206, 516), (205, 514), (204, 512), (204, 511),
#           (203, 510), (203, 509), (203, 509), (203, 507), (202, 507), (202, 506), (202, 506), (201, 505), (201, 504),
#           (201, 503), (201, 502), (200, 501), (199, 499), (199, 498), (199, 496), (197, 494), (197, 492), (196, 489),
#           (196, 489), (195, 487), (195, 486), (195, 484), (194, 484), (193, 483), (193, 483), (193, 482), (193, 481),
#           (192, 479), (192, 479), (192, 476), (192, 476), (191, 474), (190, 473), (190, 472), (190, 470), (190, 469),
#           (189, 469), (189, 467), (188, 466), (188, 465), (188, 464), (188, 463), (187, 462), (186, 460), (186, 459),
#           (186, 458), (186, 457), (185, 453), (184, 453), (184, 452), (183, 452), (183, 451), (183, 450), (183, 449),
#           (183, 448), (183, 448), (183, 446), (182, 446), (182, 445), (182, 444), (181, 442), (181, 441), (180, 439),
#           (180, 438), (179, 435), (179, 433), (178, 431), (178, 430), (177, 428), (177, 427), (177, 426), (177, 425),
#           (177, 425), (177, 424), (176, 422), (176, 422), (175, 420), (175, 420), (175, 419), (175, 417), (174, 417),
#           (174, 416), (174, 415), (174, 414), (174, 414), (174, 413), (174, 410), (174, 409), (174, 408), (173, 405),
#           (173, 404), (172, 402), (172, 400), (172, 399), (172, 398), (172, 397), (172, 396), (172, 395), (172, 394),
#           (172, 393), (172, 391), (172, 390), (172, 387), (171, 385), (171, 383), (171, 380), (171, 379), (171, 373),
#           (169, 372), (169, 371), (169, 369), (169, 368), (169, 367), (169, 366), (169, 365), (169, 364), (169, 363),
#           (169, 362), (169, 362), (169, 360), (169, 359), (169, 358), (169, 356), (169, 354), (169, 352), (169, 350),
#           (169, 349), (169, 348), (169, 346), (169, 345), (169, 345), (169, 344), (169, 343), (169, 342), (169, 340),
#           (169, 339), (170, 338), (170, 336), (170, 335), (170, 335), (170, 333), (170, 331), (170, 329), (171, 329),
#           (171, 328), (171, 327), (172, 326), (172, 325), (172, 324), (172, 323), (172, 321), (173, 319), (173, 317),
#           (173, 316), (174, 314), (174, 313), (174, 312), (175, 310), (175, 308), (176, 308), (176, 307), (176, 306),
#           (176, 305), (177, 304), (177, 303), (178, 302), (178, 301), (178, 300), (178, 299), (179, 299), (179, 297),
#           (179, 297), (180, 295), (180, 294), (181, 292), (181, 291), (181, 290), (182, 289), (183, 287), (184, 286),
#           (184, 284), (185, 283), (185, 282), (187, 280), (187, 277), (188, 275), (189, 274), (190, 271), (190, 270),
#           (190, 269), (191, 269), (192, 268), (192, 268), (193, 267), (193, 267), (194, 265), (195, 264), (195, 263),
#           (196, 261), (197, 260), (197, 259), (199, 257), (200, 255), (200, 254), (201, 253), (201, 252), (202, 250),
#           (203, 249), (203, 249), (204, 248), (204, 246), (205, 246), (206, 245), (207, 244), (208, 242), (209, 240),
#           (210, 238), (212, 236), (213, 234), (216, 232), (216, 230), (218, 229), (219, 227), (220, 227), (220, 226),
#           (221, 225), (221, 224), (222, 224), (222, 223), (223, 222), (224, 221), (225, 220), (226, 220), (227, 219),
#           (228, 219), (230, 217), (231, 216), (232, 215), (234, 214), (235, 213), (237, 211), (238, 210), (239, 208),
#           (240, 207), (241, 205), (242, 205), (242, 204), (243, 204), (243, 203), (244, 203), (244, 202), (245, 202),
#           (246, 202), (246, 201), (247, 201), (247, 201), (248, 200), (249, 200), (250, 198), (251, 198), (253, 197),
#           (253, 196), (255, 194), (256, 194), (257, 193), (258, 192), (259, 190), (261, 190), (262, 188), (263, 187),
#           (264, 187), (265, 186), (266, 185), (267, 184), (269, 183), (270, 182), (271, 181), (271, 180), (272, 180),
#           (272, 179), (274, 179), (274, 178), (276, 177), (277, 176), (278, 176), (280, 174), (281, 174), (283, 173),
#           (283, 172), (284, 172), (284, 171), (285, 171), (285, 170), (286, 169), (287, 169), (289, 168), (290, 167),
#           (291, 166), (292, 165), (292, 164), (294, 163), (296, 161), (298, 161), (298, 160), (299, 160), (301, 159),
#           (301, 158), (302, 158), (303, 157), (304, 157), (305, 156), (306, 154), (307, 154), (309, 153), (312, 152),
#           (313, 150), (316, 150), (317, 149), (319, 148), (321, 147), (322, 146), (323, 146), (325, 145), (326, 145),
#           (326, 144), (328, 143), (328, 143), (329, 142), (332, 141), (334, 141), (334, 140), (336, 140), (337, 139),
#           (338, 138), (339, 138), (339, 138), (341, 138), (342, 138), (344, 137), (346, 136), (348, 136), (351, 135),
#           (352, 135), (353, 133), (354, 133), (354, 133), (355, 133), (356, 132), (357, 132), (358, 132), (359, 132),
#           (359, 132), (361, 131), (363, 130), (365, 130), (366, 129), (369, 128), (371, 127), (372, 127), (374, 126),
#           (376, 126), (376, 125), (377, 125), (378, 125), (378, 125), (379, 125), (381, 124), (382, 124), (383, 124),
#           (384, 124), (385, 123), (387, 122), (390, 122), (393, 122), (397, 120), (401, 120), (404, 119), (407, 118),
#           (408, 118), (409, 118), (410, 117), (411, 117), (411, 117), (413, 117), (414, 116), (415, 116), (418, 116),
#           (420, 116), (422, 116), (424, 115), (424, 115), (426, 115), (426, 115), (427, 115), (429, 115), (430, 115),
#           (432, 115), (434, 115), (437, 115), (439, 115), (442, 115), (445, 114), (447, 114), (448, 114), (450, 114),
#           (451, 114), (452, 114), (454, 115), (455, 115), (457, 116), (459, 116), (462, 117), (466, 117), (468, 117),
#           (470, 118), (473, 118), (473, 119), (475, 119), (477, 119), (477, 119), (479, 119), (480, 119), (482, 120),
#           (482, 120), (483, 120), (484, 120), (485, 120), (487, 121), (487, 121), (488, 122), (489, 122), (490, 122),
#           (491, 122), (492, 122), (493, 123), (494, 123), (495, 123), (497, 124), (499, 124), (500, 124), (501, 124),
#           (503, 124), (506, 125), (509, 126), (510, 126), (511, 126), (512, 127), (514, 127), (514, 128), (515, 128),
#           (516, 128), (517, 128), (518, 129), (520, 129), (521, 129), (523, 129), (528, 130), (529, 130), (531, 130),
#           (531, 130), (532, 130), (535, 130), (535, 131), (536, 131), (538, 131), (538, 132), (539, 132), (539, 132),
#           (541, 133), (543, 133), (544, 134), (546, 134), (547, 134), (549, 135), (550, 136), (553, 136), (554, 137),
#           (557, 137), (558, 138), (558, 138), (559, 138), (560, 139), (561, 139), (561, 139), (563, 140), (563, 140),
#           (564, 141), (566, 141), (566, 141), (567, 142), (568, 142), (570, 143), (571, 143), (571, 143), (573, 143),
#           (573, 144), (574, 144), (574, 144), (575, 144), (575, 145), (578, 146), (579, 147), (580, 147), (581, 147),
#           (581, 149), (583, 149), (584, 149), (585, 149), (585, 150), (586, 150), (588, 151), (589, 152), (591, 153),
#           (594, 154), (599, 156), (602, 156), (604, 157), (605, 158), (607, 159), (608, 160), (609, 160), (610, 160),
#           (610, 161), (611, 161), (612, 162), (613, 163), (616, 164), (617, 164), (618, 166), (621, 166), (623, 167),
#           (624, 169), (626, 169), (627, 170), (628, 171), (628, 171), (629, 172), (630, 174), (632, 174), (633, 175),
#           (633, 176), (635, 176), (635, 178), (636, 178), (637, 178), (639, 179), (639, 180), (640, 180), (640, 181),
#           (641, 181), (641, 183), (643, 184), (644, 185), (646, 187), (646, 187), (647, 188), (648, 189), (649, 190),
#           (649, 190), (650, 191), (650, 192), (651, 193), (652, 193), (652, 194), (653, 195), (654, 197), (655, 197),
#           (655, 198), (657, 199), (657, 200), (658, 201), (658, 202), (658, 202), (661, 204), (661, 205), (662, 205),
#           (663, 207), (664, 207), (664, 208), (665, 208), (665, 210), (666, 211), (667, 212), (667, 212), (668, 213),
#           (669, 214), (669, 215), (670, 216), (670, 216), (671, 217), (671, 217), (672, 218), (673, 219), (674, 220),
#           (674, 221), (675, 223), (676, 223), (677, 224), (677, 225), (679, 226), (679, 228), (680, 229), (681, 230),
#           (681, 230), (681, 231), (682, 233), (683, 233), (684, 235), (685, 236), (685, 237), (685, 238), (686, 239),
#           (686, 239), (686, 240), (686, 241), (686, 242), (687, 243), (688, 243), (689, 245), (689, 247), (689, 247),
#           (690, 248), (691, 250), (691, 251), (691, 252), (691, 253), (691, 253), (692, 255), (692, 256), (692, 257),
#           (693, 258), (693, 259), (693, 260), (693, 261), (693, 262), (694, 263), (694, 264), (694, 265), (694, 266),
#           (694, 267), (694, 268), (695, 269), (694, 269), (694, 268)]
d_bar_coefficient = 0.8
new_points = []
for i in range(0, len(points), 5):
    new_points.append(points[i])

points = new_points
number_of_points = len(points)
alpha = 1
gamma = 20
center_coefficient = 0.5



contour = np.zeros((number_of_points, 2))
for i in range(number_of_points):
    contour[i] = np.array([points[i][0], points[i][1]])


def distance(v0, v1, d):
    res = (v0[0] - v1[0]) ** 2 + (v0[1] - v1[1]) ** 2
    res = math.sqrt(res)
    res = res - d
    res = res ** 2
    return res


def change_position(contour_point, row_number):
    contour_point_copy = np.copy(contour_point)
    contour_point_copy[0] = contour_point_copy[0] + (row_number / neighbour_size - half_of_neighbour_size)
    contour_point_copy[1] = contour_point_copy[1] + (row_number % neighbour_size - half_of_neighbour_size)
    return contour_point_copy


def external_energy(contour_point, row_number, gradient, gamma):
    changed_point = change_position(contour_point, row_number)
    energy = 0
    if gradient[int(changed_point[0]), int(changed_point[1])] != 0:

        energy = -(gamma) * gradient[
            int(changed_point[0]), int(changed_point[1])]
    return energy


while iteration < max_iteration:

    a = np.mean(contour, axis=0)
    center = np.array(a)
    center[0]=301
    center[1]=394
    iteration += 1
    dp = np.zeros((neighbour_size ** 2, number_of_points))
    move = np.zeros((neighbour_size ** 2, number_of_points))
    min_energy = math.inf
    min_energy_row_index_column1 = 0
    # d_bar = 0
    next_point = np.roll(contour, 1, axis=0)
    distance_between_consecutive_points = contour - next_point
    distance_between_consecutive_points = distance_between_consecutive_points ** 2
    distance_between_consecutive_points = np.sum(distance_between_consecutive_points, axis=1)
    distance_between_consecutive_points = np.sqrt(distance_between_consecutive_points)
    d_bar = np.mean(distance_between_consecutive_points)
    d_bar = d_bar * d_bar_coefficient

    for start_point_of_column1 in range(neighbour_size ** 2):
        temp_move = np.zeros_like(move)
        dp = np.zeros((neighbour_size ** 2, number_of_points))


        dp[:, 0] = dp[:, 0] + external_energy(contour[0], start_point_of_column1, gradient_image, gamma)
        dp[:, 0] = dp[:, 0] + center_coefficient * distance(change_position(contour[0], start_point_of_column1), center,
                                                            0)

        for row_number_column2 in range(9):
            dp[row_number_column2, 1] = dp[row_number_column2, 1] + external_energy(contour[1], row_number_column2,
                                                                                    gradient_image, gamma)

            dp[row_number_column2, 1] = dp[row_number_column2, 1] + alpha * distance(
                change_position(contour[0], start_point_of_column1),
                change_position(contour[1], row_number_column2), d_bar)

            dp[row_number_column2, 1] = dp[row_number_column2, 1] + center_coefficient * distance(
                change_position(contour[1], row_number_column2), center, 0)

            dp[row_number_column2, 1] = dp[row_number_column2, 1] + dp[start_point_of_column1, 0]

            column_index1 = np.copy(dp[:, 1])
            temp_move[:, 0] = np.argmin(column_index1)

        for column_index in range(2, number_of_points):
            for row_number in range(neighbour_size ** 2):
                dp[row_number, column_index] = dp[row_number, column_index] + external_energy(contour[column_index],
                                                                                              row_number,
                                                                                              gradient_image, gamma)

                dp[row_number, column_index] = dp[row_number, column_index] + center_coefficient * distance(
                    change_position(contour[column_index], row_number), center, 0)

                min_row_prev_column = 0
                min_value_row_prev_column = math.inf
                for row_number_prev_column in range(neighbour_size ** 2):
                    dis = distance(change_position(contour[column_index - 1], row_number_prev_column),
                                   change_position(contour[column_index], row_number), d_bar)

                    dis += dp[row_number_prev_column, column_index - 1]

                    if dis < min_value_row_prev_column:
                        min_value_row_prev_column = dis
                        min_row_prev_column = row_number_prev_column

                dp[row_number, column_index] = dp[row_number, column_index] + alpha * min_value_row_prev_column


            current_column = np.copy(dp[:, column_index])
            temp_move[:, column_index - 1] = np.argmin(current_column)

        for row_number_last_column in range(neighbour_size ** 2):
            dp[row_number_last_column, number_of_points - 1] = dp[
                                                                   row_number_last_column, number_of_points - 1] + distance(
                change_position(contour[number_of_points - 1], row_number_last_column),
                change_position(contour[0], start_point_of_column1), d_bar)

        last_column = np.copy(dp[:, number_of_points - 1])
        current_energy = np.min(last_column)
        if current_energy < min_energy:

            min_energy = current_energy
            move = temp_move
            min_energy_row_index_column1 = start_point_of_column1



    contour[0] = change_position(contour[0], min_energy_row_index_column1)
    for index in range(1, number_of_points):
        contour[index] = change_position(contour[index], move[0, index - 1])

    save_frame(np.copy(image), contour, iteration, max_iteration, center)
    print(iteration)


print(time.time()-start_time)